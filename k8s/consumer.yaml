apiVersion: v1
kind: Service
metadata:
  name: service-demo-consumer
spec:
  ports:
    - name: http
      port: 8081
      targetPort: 8081
  selector:
    app: demo-consumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-demo-consumer-v1
  labels:
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-consumer
      version: v1
  template:
    metadata:
      labels:
        app: demo-consumer
        version: v1
    spec:
      serviceAccountName: serviceaccount-demo-consumer
      containers:
        - name: demo-consumer
          image: 192.168.103.64:8080/demo/demo-consumer:1.0.0-SNAPSHOT
          imagePullPolicy: Always
          args: [ "--spring.config.location=/app/resources/bootstrap.yaml", "--spring.profiles.active=prod" ]
          ports:
            - name: http
              containerPort: 8081
            - name: grpc
              containerPort: 5443
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            failureThreshold: 2
          volumeMounts:
            - name: demo-consumer
              mountPath: /app/config
      volumes:
        - name: demo-consumer
          configMap:
            name: demo-consumer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-consumer
data:
  application.yaml: |-
    consumer:
      demo:
        config:
          id: 888
          name: zhangsan
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: serviceaccount-demo-consumer
  labels:
    app: service-demo-consumer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-demo-consumer
rules:
  - apiGroups: [ "", "extensions", "apps" ]
    resources: [ "configmaps", "secrets" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-demo-consumer
  labels:
    app: service-demo-consumer
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: role-demo-consumer
subjects:
  - kind: ServiceAccount
    name: serviceaccount-demo-consumer
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: virtualservice-demo-consumer
spec:
  hosts:
    - "*"
  gateways:
    - demo-gateway
  http:
    - match:
        - uri:
            prefix: /demo
      route:
        - destination:
            host: "service-demo-consumer.default.svc.cluster.local"
            port:
              number: 8081

